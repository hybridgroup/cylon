---
title: Cylon.js - Button Driver
author: The Hybrid Group
page_title: Button
page_subtitle: Driver
layout: documentation
page_title_show: true

arduino_platform: true
beaglebone_platform: true
raspberry_platform: true
spark_platform: true
---
%section.intro
  = image_tag "/images/devices/button.jpg", class: "display"
  %p
    Simple interface that makes it possible to register clicks through physical input.

%section.how_to
  %h2 How to establish a connection and setup the driver 
  %h3 JavaScript
  :markdown
        :::javascript

        var Cylon = require('cylon');

        Cylon.robot({
          connection: {name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0'},

          device: {name: 'button', driver: 'button', pin: 2},
          ...

  %h3 CoffeeScript
  :markdown
        :::javascript
        Cylon = require 'cylon'

        Cylon.robot
          connection:
            name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0'

          device:
            name: 'button', driver: 'button', pin: 2
          ...

%section.public-methods
  %h2 Commands:
  %table.commands 
    %tr 
      %th Command (param)
      %th Description
    %tr 
      %td.command isPressed
      %td.param  
        %p Returns true or false matching state of the button.
        %h5 Params
        %span no params
        %h5 Returns 
        %span true | false



%section.public-events
  %h2 Events:
  %table.commands 
    %tr 
      %th Event
      %th Description
    %tr 
      %td.command 
        %span update
      %td
        This event will contain one of the following events.
        %br/  
        You can also subscribe to one of the specific events, if that is the information you are interested in.
    %tr 
      %td.command 
        %span push
      %td 
        %p This event gets triggered when the button changes state from released to pushed.
        %h5 data
        %span integer
        Button changes state (data = 1)
    %tr 
      %td.command 
        %span release
      %td 
        %p This event gets triggered when the button changes state from pushed to released.
        %h5 data
        %span integer
        Button changes state
    %tr 
      %td.command 
        %span start
      %td Sent when the device has been started and is ready to use. 


%section.how-to
  %h2 How to use
  %p 
    This example detects when a button has been pushed.

  %h3 JavaScript    
  :markdown
        :::javascript

        var Cylon = require('cylon');

        Cylon.robot({
          connection: {name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0'},

          device: {name: 'button', driver: 'button', pin: 2},

          work: function(my) {
            my.button.on('push', function() {
              Logger.info("Button pushed!");
            });
          }
        }).start();

  %h3 CoffeeScript
  :markdown
        :::javascript
        Cylon = require 'cylon'

        Cylon.robot
          connection:
            name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0'

          device:
            name: 'button', driver: 'button', pin: 2

          work: (my) ->
            my.button.on 'push', -> Logger.info "Button pushed!"

        .start()

%section.circuit
  %h2 Circuit and Schematic
  =link_to "http://arduino.cc/en/tutorial/button", "http://arduino.cc/en/tutorial/button", target:"_blank" 

%section.compatability.hardware
  %h2 Works with:
  =# TODO: Update platform list with all that work with this driver in Cylon.js.
  .devices
    = partial "documentation/partials/devices_platforms"
    

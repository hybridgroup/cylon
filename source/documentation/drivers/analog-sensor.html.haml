---
title: Cylon.js - Analog Sensor Driver
author: The Hybrid Group
page_title: Analog Sensor
page_subtitle: Driver
layout: documentation
page_title_show: true

arduino_platform: true
spark_platform: true
---
%section.intro
  = image_tag "/images/devices/analog-sensor.jpg", class: "display"
  %p
    Makes it possible to interact with analog inputs on your device and obtain values that represent the analog input send by the sensors.
    The value received from an analog input read from the sensor goes from 0 to 1027.

%section.how_to
  %h2 How to establish a connection and setup the driver
  %h3 JavaScript
  :markdown
        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connection: {name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0'},

          device: {name: 'sensor', driver: 'analogSensor', pin: 0, lowerLimit: 100, upperLimit: 900},
          ...

  %h3 CoffeeScript
  :markdown
        :::javascript
        Cylon = require 'cylon'

        Cylon.robot
          connection:
            name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0'

          device:
            name: 'sensor', driver: 'analogSensor', pin: 0, lowerLimit: 100, upperLimit: 900
          ...

%section.public-methods
  %h2 Commands:
  %table.commands 
    %tr 
      %th Command (param)
      %th Description
    %tr 
      %td.command analogRead(pin_number)
      %td.param  
        %p Returns an integer value that represents the analog read from the sensor.
        %h5 Params
        %span  pin_number → integer
        The pin number for which to return data
        %h5 Returns
        %span integer
        Current analog sensor value
    %tr 
      %td.command upperLimit(limit)
      %td 
        %p Sets an upper limit for the sensor, that when exceeded, triggers a notification event of the same name.
        %h5 Params
        %span  limit → integer
        The upper limit that triggers notification event
        %h5 Returns
        %span null
    %tr 
      %td.command lowerLimit(limit)
      %td 
        %p Sets an lower limit for the sensor, that when exceeded, triggers a notification event of the same name.
        %h5 Params
        %span  limit → integer
        The lower limit that triggers notification event
        %h5 Returns
        %span null

%section.public-events
  %h2 Events:
  %table.commands 
    %tr 
      %th Event
      %th Description
    %tr 
      %td.command 
        %span update
      %td 
        This event will contain one of the events listed below.
        %br/  
        You can also subscribe to one of the specific events, if that is the information you are interested in.
    %tr 
      %td.command 
        %span analogRead(data)
      %td   
        %p The analogRead event data contains an integer value that represents the analog read from the sensor.
        %h5 data
        %span integer
        Current sensor reading
    %tr 
      %td.command 
        %span upperLimit(data)
      %td 
        %p Gets triggered if the value read by the sensor is greater or equal to upperLimit (value passed when setting up the sensor).
        %h5 data
        %span integer
        Current sensor reading that triggered the notification
    %tr 
      %td.command 
        %span lowerLimit(data)
      %td 
        %p Gets triggered if the value read by the sensor is less or equal to lowerLimit (value passed when setting up the sensor).
        %h5 data
        %span integer
        Current sensor reading that triggered the notification
    %tr 
      %td.command 
        %span start
      %td Sent when the device has been started and is ready to use.

%section.how-to
  %h2 How to use
  %p 
    This example detects lower and upper limits on a photoresistor sensor.
  %h3 JavaScript
  :markdown
        :::javascript
        var Cylon = require('cylon');

        Cylon.robot({
          connection: {name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0'},

          device: {name: 'sensor', driver: 'analogSensor', pin: 0, lowerLimit: 100, upperLimit: 900},

          work: function(my) {
            my.sensor.on('lowerLimit', function() {
              Logger.info("Lower limit reached!");
            });
            my.sensor.on('upperLimit', function() {
              Logger.info("Upper limit reached!");
            });
          }
        }).start();

  %h3 CoffeeScript
  :markdown
        :::javascript
        Cylon = require 'cylon'

        Cylon.robot
          connection:
            name: 'arduino', adaptor: 'firmata', port: '/dev/ttyACM0'

          device:
            name: 'sensor', driver: 'analogSensor', pin: 0, lowerLimit: 100, upperLimit: 900

          work: (my) ->
            my.sensor.on 'lowerLimit', -> Logger.info "Lower limit reached!"
            my.sensor.on 'upperLimit', -> Logger.info "Upper limit reached!"

        .start()

%section.circuit
  %h2 Circuit and Schematic
  %p
    Circuit for analog sensors is pretty much the same as the button circuit, you just need to substitute
    the button for a photoresistor.
    <br />
    =link_to "http://arduino.cc/en/tutorial/button", "http://arduino.cc/en/tutorial/button", target:"_blank" 
  %p
    It should look like the circuit in this example.
    <br />
    =link_to "http://arduino.cc/en/Tutorial/SwitchCase", "http://arduino.cc/en/Tutorial/SwitchCase", target:"_blank" 

%section.compatibility.hardware
  %h2 Works with:
  =# TODO: Update platform list with all that work with this driver in Cylon.js.
  .devices
    = partial "documentation/partials/devices_platforms"

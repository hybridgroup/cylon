---
layout: documentation
page_title_show: true
title: "Cylon.JS Example - Beaglebone Servo"
page_title: "Example: Beaglebone Servo"
author: The Hybrid Group
description: A Cylon.JS code example
page_subtitle: "<a href='https://github.com/hybridgroup/cylon-beaglebone/tree/master/examples/servo' target='_blank'>View In Repo</a>"
active_menu_docs: true
breadcrumbs: "<li><a href='#'>Beaglebone Servo</a></li>"
---
-content_for :bredcrumbs do
  = partial "/documentation/examples/breadcrumbs"

:markdown
  # Beaglebone Servo

  First, let's import Cylon:

      :::javascript
      var Cylon = require('cylon');

  Now that we have Cylon imported, we can start defining our robot

      :::javascript
      Cylon.robot({

  Let's define the connections and devices:

      :::javascript
        connection: { name: 'beaglebone', adaptor: 'beaglebone' },
        device: { name: 'servo', driver: 'servo', pin: 'P9_14' },

  Now that Cylon knows about the necessary hardware we're going to be using, we'll
  tell it what work we want to do

      :::javascript
        work: function(my) {
          // Be carefull with your servo angles or you might DAMAGE the servo!
          // Cylon uses a 50hz/s (20ms period) frequency and a Duty Cycle
          // of 0.5ms to 2.5ms to control the servo angle movement.
          //
          // This means:
          // 1. 0.5ms == 0 degrees
          // 2. 1.5ms == 90 degrees
          // 3. 2.5ms == 180 degrees
          // (It is usually safe to start with a 90 degree angle, 1.5ms duty
          // cycle in most servos)
          //
          // Please review your servo datasheet to make sure of correct
          // angle range and the Freq/MS Duty cycle it requires.
          // If more servo support is needed leave us a comment, raise an
          // issue or help us add more support.

          var angle = 30;
          var increment = 40;

          every((1).seconds(), function() {
            angle += increment;
            my.servo.angle(angle);
            console.log("Current Angle: " + my.servo.currentAngle());

            if ((angle === 30) || (angle === 150)) { increment = -increment; }
          });
        }

  Now that our robot knows what work to do, and the work it will be doing that
  hardware with, we can start it:

      :::javascript
      }).start();


---
layout: documentation
page_title_show: true
title: "Cylon.JS Example - Cattoy"
page_title: "Example: Cattoy"
author: The Hybrid Group
description: A Cylon.JS code example
page_subtitle: "<a href='https://github.com/hybridgroup/cylon/tree/master/examples/cattoy' target='_blank'>View In Repo</a>"
active_menu_docs: true
breadcrumbs: "<li><a href='#'>Cattoy</a></li>"
---
-content_for :bredcrumbs do
  = partial "/documentation/examples/breadcrumbs"

:markdown
  # Cattoy

  First, let's import Cylon:

      :::javascript
      var Cylon = require('cylon');

  Now that we have Cylon imported, we can start defining our robot

      :::javascript
      Cylon.robot({

  Let's define the connections and devices:

      :::javascript
        connections: [
          { name: 'digispark', adaptor: 'digispark'},
          { name: 'leapmotion', adaptor: 'leapmotion', port: '127.0.0.1:6437' }
        ],

        devices: [
          {name: 'servo1', driver: 'servo', pin: 0, connection: 'digispark'},
          {name: 'servo2', driver: 'servo', pin: 1, connection: 'digispark'},
          {name: 'leapmotion', driver: 'leapmotion', connection: 'leapmotion'}
        ],

  Now that Cylon knows about the necessary hardware we're going to be using, we'll
  tell it what work we want to do:

      :::javascript
        work: function(my) {
          my['x'] = 90;
          my['z'] = 90;

          my.leapmotion.on('hand', function(hand) {
            my['x'] = hand.palmX.fromScale(-300, 300).toScale(30, 150);
            my['z'] = hand.palmZ.fromScale(-300, 300).toScale(30, 150);
          });

          every(100, function() {
            my.servo1.angle(my['x']);
            my.servo2.angle(my['z']);

            console.log("Current Angle: " + my.servo1.currentAngle() + ", " + my.servo2.currentAngle());
          });

  Now that our robot knows what work to do, and the work it will be doing that
  hardware with, we can start it:

      :::javascript
      }).start()

